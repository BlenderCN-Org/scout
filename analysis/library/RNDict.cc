//
// File generated by rootcint at Tue Jan 26 13:51:12 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME RNDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RNDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void SLSis3316EventHeader_ROOT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SLSis3316EventHeader_ROOT(void *p = 0);
   static void *newArray_SLSis3316EventHeader_ROOT(Long_t size, void *p);
   static void delete_SLSis3316EventHeader_ROOT(void *p);
   static void deleteArray_SLSis3316EventHeader_ROOT(void *p);
   static void destruct_SLSis3316EventHeader_ROOT(void *p);
   static void streamer_SLSis3316EventHeader_ROOT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SLSis3316EventHeader_ROOT*)
   {
      ::SLSis3316EventHeader_ROOT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SLSis3316EventHeader_ROOT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SLSis3316EventHeader_ROOT", ::SLSis3316EventHeader_ROOT::Class_Version(), "./SLSis3316FastData.h", 181,
                  typeid(::SLSis3316EventHeader_ROOT), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SLSis3316EventHeader_ROOT::Dictionary, isa_proxy, 0,
                  sizeof(::SLSis3316EventHeader_ROOT) );
      instance.SetNew(&new_SLSis3316EventHeader_ROOT);
      instance.SetNewArray(&newArray_SLSis3316EventHeader_ROOT);
      instance.SetDelete(&delete_SLSis3316EventHeader_ROOT);
      instance.SetDeleteArray(&deleteArray_SLSis3316EventHeader_ROOT);
      instance.SetDestructor(&destruct_SLSis3316EventHeader_ROOT);
      instance.SetStreamerFunc(&streamer_SLSis3316EventHeader_ROOT);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SLSis3316EventHeader_ROOT*)
   {
      return GenerateInitInstanceLocal((::SLSis3316EventHeader_ROOT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SLSis3316EventHeader_ROOT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SLMarsDetector_2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SLMarsDetector_2(void *p = 0);
   static void *newArray_SLMarsDetector_2(Long_t size, void *p);
   static void delete_SLMarsDetector_2(void *p);
   static void deleteArray_SLMarsDetector_2(void *p);
   static void destruct_SLMarsDetector_2(void *p);
   static void streamer_SLMarsDetector_2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SLMarsDetector_2*)
   {
      ::SLMarsDetector_2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SLMarsDetector_2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SLMarsDetector_2", ::SLMarsDetector_2::Class_Version(), "./SLMarsDetector_2.h", 18,
                  typeid(::SLMarsDetector_2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SLMarsDetector_2::Dictionary, isa_proxy, 0,
                  sizeof(::SLMarsDetector_2) );
      instance.SetNew(&new_SLMarsDetector_2);
      instance.SetNewArray(&newArray_SLMarsDetector_2);
      instance.SetDelete(&delete_SLMarsDetector_2);
      instance.SetDeleteArray(&deleteArray_SLMarsDetector_2);
      instance.SetDestructor(&destruct_SLMarsDetector_2);
      instance.SetStreamerFunc(&streamer_SLMarsDetector_2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SLMarsDetector_2*)
   {
      return GenerateInitInstanceLocal((::SLMarsDetector_2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SLMarsDetector_2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SLMarsDetector_16_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SLMarsDetector_16(void *p = 0);
   static void *newArray_SLMarsDetector_16(Long_t size, void *p);
   static void delete_SLMarsDetector_16(void *p);
   static void deleteArray_SLMarsDetector_16(void *p);
   static void destruct_SLMarsDetector_16(void *p);
   static void streamer_SLMarsDetector_16(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SLMarsDetector_16*)
   {
      ::SLMarsDetector_16 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SLMarsDetector_16 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SLMarsDetector_16", ::SLMarsDetector_16::Class_Version(), "./SLMarsDetector_16.h", 18,
                  typeid(::SLMarsDetector_16), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SLMarsDetector_16::Dictionary, isa_proxy, 0,
                  sizeof(::SLMarsDetector_16) );
      instance.SetNew(&new_SLMarsDetector_16);
      instance.SetNewArray(&newArray_SLMarsDetector_16);
      instance.SetDelete(&delete_SLMarsDetector_16);
      instance.SetDeleteArray(&deleteArray_SLMarsDetector_16);
      instance.SetDestructor(&destruct_SLMarsDetector_16);
      instance.SetStreamerFunc(&streamer_SLMarsDetector_16);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SLMarsDetector_16*)
   {
      return GenerateInitInstanceLocal((::SLMarsDetector_16*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SLMarsDetector_16*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr SLSis3316EventHeader_ROOT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SLSis3316EventHeader_ROOT::Class_Name()
{
   return "SLSis3316EventHeader_ROOT";
}

//______________________________________________________________________________
const char *SLSis3316EventHeader_ROOT::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SLSis3316EventHeader_ROOT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SLSis3316EventHeader_ROOT::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SLSis3316EventHeader_ROOT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SLSis3316EventHeader_ROOT::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SLSis3316EventHeader_ROOT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SLSis3316EventHeader_ROOT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SLSis3316EventHeader_ROOT*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SLMarsDetector_2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SLMarsDetector_2::Class_Name()
{
   return "SLMarsDetector_2";
}

//______________________________________________________________________________
const char *SLMarsDetector_2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SLMarsDetector_2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SLMarsDetector_2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SLMarsDetector_2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SLMarsDetector_2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SLMarsDetector_2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SLMarsDetector_2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SLMarsDetector_2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SLMarsDetector_16::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SLMarsDetector_16::Class_Name()
{
   return "SLMarsDetector_16";
}

//______________________________________________________________________________
const char *SLMarsDetector_16::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SLMarsDetector_16*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SLMarsDetector_16::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SLMarsDetector_16*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SLMarsDetector_16::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SLMarsDetector_16*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SLMarsDetector_16::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SLMarsDetector_16*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void SLMarsDetector_2::Streamer(TBuffer &R__b)
{
   // Stream an object of class SLMarsDetector_2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         channels[R__i].Streamer(R__b);
      {
         for (Int_t R__l = 0; R__l < 2; R__l++) {
         vector<unsigned short> &R__stl =  samples[R__l];
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
    }
      R__b.CheckByteCount(R__s, R__c, SLMarsDetector_2::IsA());
   } else {
      R__c = R__b.WriteVersion(SLMarsDetector_2::IsA(), kTRUE);
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         channels[R__i].Streamer(R__b);
         for (Int_t R__l = 0; R__l < 2; R__l++) {
      {
         vector<unsigned short> &R__stl =  samples[R__l];
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<unsigned short>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
    }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SLMarsDetector_2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SLMarsDetector_2.
      TClass *R__cl = ::SLMarsDetector_2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channels[2]", channels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "samples[2]", samples);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SLMarsDetector_2(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SLMarsDetector_2 : new ::SLMarsDetector_2;
   }
   static void *newArray_SLMarsDetector_2(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SLMarsDetector_2[nElements] : new ::SLMarsDetector_2[nElements];
   }
   // Wrapper around operator delete
   static void delete_SLMarsDetector_2(void *p) {
      delete ((::SLMarsDetector_2*)p);
   }
   static void deleteArray_SLMarsDetector_2(void *p) {
      delete [] ((::SLMarsDetector_2*)p);
   }
   static void destruct_SLMarsDetector_2(void *p) {
      typedef ::SLMarsDetector_2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SLMarsDetector_2(TBuffer &buf, void *obj) {
      ((::SLMarsDetector_2*)obj)->::SLMarsDetector_2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SLMarsDetector_2

//______________________________________________________________________________
void SLMarsDetector_16::Streamer(TBuffer &R__b)
{
   // Stream an object of class SLMarsDetector_16.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      int R__i;
      for (R__i = 0; R__i < 16; R__i++)
         channels[R__i].Streamer(R__b);
      {
         for (Int_t R__l = 0; R__l < 16; R__l++) {
         vector<unsigned short> &R__stl =  samples[R__l];
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
    }
      R__b >> valid;
      R__b.CheckByteCount(R__s, R__c, SLMarsDetector_16::IsA());
   } else {
      R__c = R__b.WriteVersion(SLMarsDetector_16::IsA(), kTRUE);
      int R__i;
      for (R__i = 0; R__i < 16; R__i++)
         channels[R__i].Streamer(R__b);
         for (Int_t R__l = 0; R__l < 16; R__l++) {
      {
         vector<unsigned short> &R__stl =  samples[R__l];
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<unsigned short>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
    }
      R__b << valid;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SLMarsDetector_16::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SLMarsDetector_16.
      TClass *R__cl = ::SLMarsDetector_16::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channels[16]", channels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "samples[16]", samples);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valid", &valid);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SLMarsDetector_16(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SLMarsDetector_16 : new ::SLMarsDetector_16;
   }
   static void *newArray_SLMarsDetector_16(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SLMarsDetector_16[nElements] : new ::SLMarsDetector_16[nElements];
   }
   // Wrapper around operator delete
   static void delete_SLMarsDetector_16(void *p) {
      delete ((::SLMarsDetector_16*)p);
   }
   static void deleteArray_SLMarsDetector_16(void *p) {
      delete [] ((::SLMarsDetector_16*)p);
   }
   static void destruct_SLMarsDetector_16(void *p) {
      typedef ::SLMarsDetector_16 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SLMarsDetector_16(TBuffer &buf, void *obj) {
      ((::SLMarsDetector_16*)obj)->::SLMarsDetector_16::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SLMarsDetector_16

//______________________________________________________________________________
void SLSis3316EventHeader_ROOT::Streamer(TBuffer &R__b)
{
   // Stream an object of class SLSis3316EventHeader_ROOT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> Timestamp;
      R__b >> ChannelID;
      R__b >> FormatBits;
      R__b >> IndexPeakHighValue;
      R__b >> PeakHighValue;
      R__b >> OverFlowFlag;
      R__b >> UnderFlowFlag;
      R__b >> RePileupFlag;
      R__b >> PileUpFlag;
      R__b >> InformationReserved;
      R__b >> AccumSumGate1;
      R__b >> AccumSumGate2;
      R__b >> AccumSumGate3;
      R__b >> AccumSumGate4;
      R__b >> AccumSumGate5;
      R__b >> AccumSumGate6;
      R__b >> AccumSumGate7;
      R__b >> AccumSumGate8;
      R__b >> MawMaxValue;
      R__b >> MawValueAfterTrig;
      R__b >> MawValueBeforeTrig;
      R__b >> FooterHeader;
      R__b >> MawTestFlag;
      R__b >> Zero;
      R__b >> NumberRawSamples;
      R__b.CheckByteCount(R__s, R__c, SLSis3316EventHeader_ROOT::IsA());
   } else {
      R__c = R__b.WriteVersion(SLSis3316EventHeader_ROOT::IsA(), kTRUE);
      R__b << Timestamp;
      R__b << ChannelID;
      R__b << FormatBits;
      R__b << IndexPeakHighValue;
      R__b << PeakHighValue;
      R__b << OverFlowFlag;
      R__b << UnderFlowFlag;
      R__b << RePileupFlag;
      R__b << PileUpFlag;
      R__b << InformationReserved;
      R__b << AccumSumGate1;
      R__b << AccumSumGate2;
      R__b << AccumSumGate3;
      R__b << AccumSumGate4;
      R__b << AccumSumGate5;
      R__b << AccumSumGate6;
      R__b << AccumSumGate7;
      R__b << AccumSumGate8;
      R__b << MawMaxValue;
      R__b << MawValueAfterTrig;
      R__b << MawValueBeforeTrig;
      R__b << FooterHeader;
      R__b << MawTestFlag;
      R__b << Zero;
      R__b << NumberRawSamples;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SLSis3316EventHeader_ROOT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SLSis3316EventHeader_ROOT.
      TClass *R__cl = ::SLSis3316EventHeader_ROOT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Timestamp", &Timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChannelID", &ChannelID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FormatBits", &FormatBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IndexPeakHighValue", &IndexPeakHighValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PeakHighValue", &PeakHighValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OverFlowFlag", &OverFlowFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UnderFlowFlag", &UnderFlowFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RePileupFlag", &RePileupFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PileUpFlag", &PileUpFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InformationReserved", &InformationReserved);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AccumSumGate1", &AccumSumGate1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AccumSumGate2", &AccumSumGate2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AccumSumGate3", &AccumSumGate3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AccumSumGate4", &AccumSumGate4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AccumSumGate5", &AccumSumGate5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AccumSumGate6", &AccumSumGate6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AccumSumGate7", &AccumSumGate7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AccumSumGate8", &AccumSumGate8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MawMaxValue", &MawMaxValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MawValueAfterTrig", &MawValueAfterTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MawValueBeforeTrig", &MawValueBeforeTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FooterHeader", &FooterHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MawTestFlag", &MawTestFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Zero", &Zero);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumberRawSamples", &NumberRawSamples);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SLSis3316EventHeader_ROOT(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SLSis3316EventHeader_ROOT : new ::SLSis3316EventHeader_ROOT;
   }
   static void *newArray_SLSis3316EventHeader_ROOT(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SLSis3316EventHeader_ROOT[nElements] : new ::SLSis3316EventHeader_ROOT[nElements];
   }
   // Wrapper around operator delete
   static void delete_SLSis3316EventHeader_ROOT(void *p) {
      delete ((::SLSis3316EventHeader_ROOT*)p);
   }
   static void deleteArray_SLSis3316EventHeader_ROOT(void *p) {
      delete [] ((::SLSis3316EventHeader_ROOT*)p);
   }
   static void destruct_SLSis3316EventHeader_ROOT(void *p) {
      typedef ::SLSis3316EventHeader_ROOT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SLSis3316EventHeader_ROOT(TBuffer &buf, void *obj) {
      ((::SLSis3316EventHeader_ROOT*)obj)->::SLSis3316EventHeader_ROOT::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SLSis3316EventHeader_ROOT

namespace ROOTDict {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned short>

/********************************************************
* RNDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRNDict();

extern "C" void G__set_cpp_environmentRNDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("SLMarsDetector_2.h");
  G__add_compiledheader("SLMarsDetector_16.h");
  G__cpp_reset_tagtableRNDict();
}
#include <new>
extern "C" int G__cpp_dllrevRNDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* SLSis3316EventHeader_ROOT */
static int G__RNDict_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SLSis3316EventHeader_ROOT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SLSis3316EventHeader_ROOT[n];
     } else {
       p = new((void*) gvp) SLSis3316EventHeader_ROOT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SLSis3316EventHeader_ROOT;
     } else {
       p = new((void*) gvp) SLSis3316EventHeader_ROOT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNDictLN_SLSis3316EventHeader_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((SLSis3316EventHeader_ROOT*) G__getstructoffset())->Sprint((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((SLSis3316EventHeader_ROOT*) G__getstructoffset())->Sprint());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SLSis3316EventHeader_ROOT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SLSis3316EventHeader_ROOT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SLSis3316EventHeader_ROOT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SLSis3316EventHeader_ROOT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SLSis3316EventHeader_ROOT*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SLSis3316EventHeader_ROOT*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SLSis3316EventHeader_ROOT*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SLSis3316EventHeader_ROOT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SLSis3316EventHeader_ROOT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SLSis3316EventHeader_ROOT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SLSis3316EventHeader_ROOT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SLSis3316EventHeader_ROOT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RNDict_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SLSis3316EventHeader_ROOT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SLSis3316EventHeader_ROOT(*(SLSis3316EventHeader_ROOT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNDictLN_SLSis3316EventHeader_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SLSis3316EventHeader_ROOT G__TSLSis3316EventHeader_ROOT;
static int G__RNDict_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SLSis3316EventHeader_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SLSis3316EventHeader_ROOT*) (soff+(sizeof(SLSis3316EventHeader_ROOT)*i)))->~G__TSLSis3316EventHeader_ROOT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SLSis3316EventHeader_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SLSis3316EventHeader_ROOT*) (soff))->~G__TSLSis3316EventHeader_ROOT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RNDict_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SLSis3316EventHeader_ROOT* dest = (SLSis3316EventHeader_ROOT*) G__getstructoffset();
   *dest = *(SLSis3316EventHeader_ROOT*) libp->para[0].ref;
   const SLSis3316EventHeader_ROOT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SLMarsDetector_2 */
static int G__RNDict_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SLMarsDetector_2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SLMarsDetector_2[n];
     } else {
       p = new((void*) gvp) SLMarsDetector_2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SLMarsDetector_2;
     } else {
       p = new((void*) gvp) SLMarsDetector_2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SLMarsDetector_2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SLMarsDetector_2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SLMarsDetector_2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SLMarsDetector_2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SLMarsDetector_2*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_174_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SLMarsDetector_2*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_174_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SLMarsDetector_2*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_174_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SLMarsDetector_2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_174_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SLMarsDetector_2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_174_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SLMarsDetector_2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_174_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SLMarsDetector_2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_174_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SLMarsDetector_2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RNDict_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SLMarsDetector_2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SLMarsDetector_2(*(SLMarsDetector_2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SLMarsDetector_2 G__TSLMarsDetector_2;
static int G__RNDict_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SLMarsDetector_2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SLMarsDetector_2*) (soff+(sizeof(SLMarsDetector_2)*i)))->~G__TSLMarsDetector_2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SLMarsDetector_2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SLMarsDetector_2*) (soff))->~G__TSLMarsDetector_2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RNDict_174_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SLMarsDetector_2* dest = (SLMarsDetector_2*) G__getstructoffset();
   *dest = *(SLMarsDetector_2*) libp->para[0].ref;
   const SLMarsDetector_2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SLMarsDetector_16 */
static int G__RNDict_175_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SLMarsDetector_16* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SLMarsDetector_16[n];
     } else {
       p = new((void*) gvp) SLMarsDetector_16[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SLMarsDetector_16;
     } else {
       p = new((void*) gvp) SLMarsDetector_16;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_16));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_175_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SLMarsDetector_16::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_175_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SLMarsDetector_16::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_175_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SLMarsDetector_16::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_175_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SLMarsDetector_16::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_175_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SLMarsDetector_16*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_175_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SLMarsDetector_16*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_175_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SLMarsDetector_16*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_175_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SLMarsDetector_16*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_175_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SLMarsDetector_16::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_175_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SLMarsDetector_16::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_175_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SLMarsDetector_16::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RNDict_175_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SLMarsDetector_16::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RNDict_175_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SLMarsDetector_16* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SLMarsDetector_16(*(SLMarsDetector_16*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_16));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SLMarsDetector_16 G__TSLMarsDetector_16;
static int G__RNDict_175_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SLMarsDetector_16*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SLMarsDetector_16*) (soff+(sizeof(SLMarsDetector_16)*i)))->~G__TSLMarsDetector_16();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SLMarsDetector_16*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SLMarsDetector_16*) (soff))->~G__TSLMarsDetector_16();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RNDict_175_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SLMarsDetector_16* dest = (SLMarsDetector_16*) G__getstructoffset();
   *dest = *(SLMarsDetector_16*) libp->para[0].ref;
   const SLMarsDetector_16& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* SLSis3316EventHeader_ROOT */

/* SLMarsDetector_2 */

/* SLMarsDetector_16 */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRNDict {
 public:
  G__Sizep2memfuncRNDict(): p(&G__Sizep2memfuncRNDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRNDict::*p)();
};

size_t G__get_sizep2memfuncRNDict()
{
  G__Sizep2memfuncRNDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRNDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRNDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RNDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RNDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RNDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RNDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RNDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RNDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RNDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* SLSis3316EventHeader_ROOT */
static void G__setup_memvarSLSis3316EventHeader_ROOT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RNDictLN_SLSis3316EventHeader_ROOT));
   { SLSis3316EventHeader_ROOT *p; p=(SLSis3316EventHeader_ROOT*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Timestamp)-(long)(p)),109,0,0,-1,-1,-1,1,"Timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ChannelID)-(long)(p)),104,0,0,-1,-1,-1,1,"ChannelID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FormatBits)-(long)(p)),104,0,0,-1,-1,-1,1,"FormatBits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IndexPeakHighValue)-(long)(p)),104,0,0,-1,-1,-1,1,"IndexPeakHighValue=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PeakHighValue)-(long)(p)),104,0,0,-1,-1,-1,1,"PeakHighValue=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->OverFlowFlag)-(long)(p)),104,0,0,-1,-1,-1,1,"OverFlowFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UnderFlowFlag)-(long)(p)),104,0,0,-1,-1,-1,1,"UnderFlowFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RePileupFlag)-(long)(p)),104,0,0,-1,-1,-1,1,"RePileupFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PileUpFlag)-(long)(p)),104,0,0,-1,-1,-1,1,"PileUpFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->InformationReserved)-(long)(p)),104,0,0,-1,-1,-1,1,"InformationReserved=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AccumSumGate1)-(long)(p)),104,0,0,-1,-1,-1,1,"AccumSumGate1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AccumSumGate2)-(long)(p)),104,0,0,-1,-1,-1,1,"AccumSumGate2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AccumSumGate3)-(long)(p)),104,0,0,-1,-1,-1,1,"AccumSumGate3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AccumSumGate4)-(long)(p)),104,0,0,-1,-1,-1,1,"AccumSumGate4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AccumSumGate5)-(long)(p)),104,0,0,-1,-1,-1,1,"AccumSumGate5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AccumSumGate6)-(long)(p)),104,0,0,-1,-1,-1,1,"AccumSumGate6=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AccumSumGate7)-(long)(p)),104,0,0,-1,-1,-1,1,"AccumSumGate7=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->AccumSumGate8)-(long)(p)),104,0,0,-1,-1,-1,1,"AccumSumGate8=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MawMaxValue)-(long)(p)),104,0,0,-1,-1,-1,1,"MawMaxValue=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MawValueAfterTrig)-(long)(p)),104,0,0,-1,-1,-1,1,"MawValueAfterTrig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MawValueBeforeTrig)-(long)(p)),104,0,0,-1,-1,-1,1,"MawValueBeforeTrig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FooterHeader)-(long)(p)),104,0,0,-1,-1,-1,1,"FooterHeader=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MawTestFlag)-(long)(p)),104,0,0,-1,-1,-1,1,"MawTestFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Zero)-(long)(p)),104,0,0,-1,-1,-1,1,"Zero=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NumberRawSamples)-(long)(p)),104,0,0,-1,-1,-1,1,"NumberRawSamples=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RNDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SLMarsDetector_2 */
static void G__setup_memvarSLMarsDetector_2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_2));
   { SLMarsDetector_2 *p; p=(SLMarsDetector_2*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->channels)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RNDictLN_SLSis3316EventHeader_ROOT),-1,-1,1,"channels[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->samples)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RNDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<unsigned short>"),-1,1,"samples[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RNDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SLMarsDetector_16 */
static void G__setup_memvarSLMarsDetector_16(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_16));
   { SLMarsDetector_16 *p; p=(SLMarsDetector_16*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->channels)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RNDictLN_SLSis3316EventHeader_ROOT),-1,-1,1,"channels[16]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->samples)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RNDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<unsigned short>"),-1,1,"samples[16]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->valid)-(long)(p)),105,0,0,-1,-1,-1,1,"valid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RNDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRNDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncSLSis3316EventHeader_ROOT(void) {
   /* SLSis3316EventHeader_ROOT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RNDictLN_SLSis3316EventHeader_ROOT));
   G__memfunc_setup("SLSis3316EventHeader_ROOT",2185,G__RNDict_173_0_1, 105, G__get_linked_tagnum(&G__RNDictLN_SLSis3316EventHeader_ROOT), -1, 0, 0, 1, 1, 0, "", "/< Default Constructor", (void*) NULL, 0);
   G__memfunc_setup("Sprint",640,G__RNDict_173_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' options", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RNDict_173_0_3, 85, G__get_linked_tagnum(&G__RNDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SLSis3316EventHeader_ROOT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RNDict_173_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SLSis3316EventHeader_ROOT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RNDict_173_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SLSis3316EventHeader_ROOT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RNDict_173_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SLSis3316EventHeader_ROOT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RNDict_173_0_7, 85, G__get_linked_tagnum(&G__RNDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RNDict_173_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RNDict_173_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RNDict_173_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RNDict_173_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SLSis3316EventHeader_ROOT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RNDict_173_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SLSis3316EventHeader_ROOT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RNDict_173_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SLSis3316EventHeader_ROOT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RNDict_173_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SLSis3316EventHeader_ROOT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SLSis3316EventHeader_ROOT", 2185, G__RNDict_173_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__RNDictLN_SLSis3316EventHeader_ROOT), -1, 0, 1, 1, 1, 0, "u 'SLSis3316EventHeader_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SLSis3316EventHeader_ROOT", 2311, G__RNDict_173_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RNDict_173_0_17, (int) ('u'), G__get_linked_tagnum(&G__RNDictLN_SLSis3316EventHeader_ROOT), -1, 1, 1, 1, 1, 0, "u 'SLSis3316EventHeader_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSLMarsDetector_2(void) {
   /* SLMarsDetector_2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_2));
   G__memfunc_setup("SLMarsDetector_2",1533,G__RNDict_174_0_1, 105, G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RNDict_174_0_2, 85, G__get_linked_tagnum(&G__RNDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SLMarsDetector_2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RNDict_174_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SLMarsDetector_2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RNDict_174_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SLMarsDetector_2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RNDict_174_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SLMarsDetector_2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RNDict_174_0_6, 85, G__get_linked_tagnum(&G__RNDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RNDict_174_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RNDict_174_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RNDict_174_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RNDict_174_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SLMarsDetector_2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RNDict_174_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SLMarsDetector_2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RNDict_174_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SLMarsDetector_2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RNDict_174_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SLMarsDetector_2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SLMarsDetector_2", 1533, G__RNDict_174_0_14, (int) ('i'), G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_2), -1, 0, 1, 1, 1, 0, "u 'SLMarsDetector_2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SLMarsDetector_2", 1659, G__RNDict_174_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RNDict_174_0_16, (int) ('u'), G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_2), -1, 1, 1, 1, 1, 0, "u 'SLMarsDetector_2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSLMarsDetector_16(void) {
   /* SLMarsDetector_16 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_16));
   G__memfunc_setup("SLMarsDetector_16",1586,G__RNDict_175_0_1, 105, G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_16), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RNDict_175_0_2, 85, G__get_linked_tagnum(&G__RNDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SLMarsDetector_16::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RNDict_175_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SLMarsDetector_16::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RNDict_175_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SLMarsDetector_16::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RNDict_175_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SLMarsDetector_16::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RNDict_175_0_6, 85, G__get_linked_tagnum(&G__RNDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RNDict_175_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RNDict_175_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RNDict_175_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RNDict_175_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SLMarsDetector_16::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RNDict_175_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SLMarsDetector_16::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RNDict_175_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SLMarsDetector_16::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RNDict_175_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SLMarsDetector_16::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SLMarsDetector_16", 1586, G__RNDict_175_0_14, (int) ('i'), G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_16), -1, 0, 1, 1, 1, 0, "u 'SLMarsDetector_16' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SLMarsDetector_16", 1712, G__RNDict_175_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RNDict_175_0_16, (int) ('u'), G__get_linked_tagnum(&G__RNDictLN_SLMarsDetector_16), -1, 1, 1, 1, 1, 0, "u 'SLMarsDetector_16' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRNDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRNDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRNDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RNDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RNDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RNDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RNDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__RNDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RNDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RNDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RNDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RNDictLN_SLSis3316EventHeader_ROOT = { "SLSis3316EventHeader_ROOT" , 99 , -1 };
G__linked_taginfo G__RNDictLN_SLMarsDetector_2 = { "SLMarsDetector_2" , 99 , -1 };
G__linked_taginfo G__RNDictLN_SLMarsDetector_16 = { "SLMarsDetector_16" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRNDict() {
  G__RNDictLN_TClass.tagnum = -1 ;
  G__RNDictLN_TBuffer.tagnum = -1 ;
  G__RNDictLN_TMemberInspector.tagnum = -1 ;
  G__RNDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__RNDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RNDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RNDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RNDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RNDictLN_SLSis3316EventHeader_ROOT.tagnum = -1 ;
  G__RNDictLN_SLMarsDetector_2.tagnum = -1 ;
  G__RNDictLN_SLMarsDetector_16.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRNDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RNDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__RNDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RNDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RNDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__RNDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RNDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RNDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RNDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RNDictLN_SLSis3316EventHeader_ROOT),sizeof(SLSis3316EventHeader_ROOT),-1,1280,(char*)NULL,G__setup_memvarSLSis3316EventHeader_ROOT,G__setup_memfuncSLSis3316EventHeader_ROOT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RNDictLN_SLMarsDetector_2),sizeof(SLMarsDetector_2),-1,1280,"Comment =)",G__setup_memvarSLMarsDetector_2,G__setup_memfuncSLMarsDetector_2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RNDictLN_SLMarsDetector_16),sizeof(SLMarsDetector_16),-1,1280,"Comment =)",G__setup_memvarSLMarsDetector_16,G__setup_memfuncSLMarsDetector_16);
}
extern "C" void G__cpp_setupRNDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupRNDict()");
  G__set_cpp_environmentRNDict();
  G__cpp_setup_tagtableRNDict();

  G__cpp_setup_inheritanceRNDict();

  G__cpp_setup_typetableRNDict();

  G__cpp_setup_memvarRNDict();

  G__cpp_setup_memfuncRNDict();
  G__cpp_setup_globalRNDict();
  G__cpp_setup_funcRNDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRNDict();
  return;
}
class G__cpp_setup_initRNDict {
  public:
    G__cpp_setup_initRNDict() { G__add_setup_func("RNDict",(G__incsetup)(&G__cpp_setupRNDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRNDict() { G__remove_setup_func("RNDict"); }
};
G__cpp_setup_initRNDict G__cpp_setup_initializerRNDict;

